{"version":3,"sources":["components/MainBg/MainBg.component.jsx","components/UserInfo/UserInfo.component.jsx","components/Avatar/Avatar.component.jsx","components/Friends/FriendItem/FriendItem.components.jsx","redux/alert/alert.actions.js","redux/alert/alertActionTypes.js","redux/others/other.actions.js","redux/others/other.types.js","components/Friends/Friends.components.jsx","redux/users/users.actions.js","redux/users/users.types.js","components/LikesView/LikesView.component.jsx","components/CustomInput/CustomInput.component.jsx","components/CustomButton/CustomButton.component.jsx","components/Comments/CommentCreate/CommentCreate.component.jsx","utils/formatDate.js","components/Comments/CommentItem/CommentItem.component.jsx","components/Comments/Comments.component.jsx","components/PostItem/PostItem.component.jsx","components/Post/Post.component.jsx","components/CustomTextArea/CustomTextArea.component.jsx","components/PostCreate/PostCreate.component.jsx","components/Preloader/Preloader.component.jsx","components/Modal/Modal.component.jsx","components/CreateDialog/CreateDialog.component.jsx","redux/dialogs/dialogs.actions.js","components/Friends/FullFriends/FullFriends.component.jsx","components/UserInfo/UserView/UserView.component.jsx","utils/isFollow.js","pages/HomePage/index.js","pages/HomePage/HomePage.component.jsx","utils/sliceStr.js","components/DialogItem/DialogItem.component.jsx","redux/dialogs/dialogs.actionTypes.js","components/Dialog/DialogSearch/DialogSearch.component.jsx","components/Dialog/Dialog.component.jsx","socket/socket.io.js","components/Containers/DialogContainer.jsx","components/MessageItem/MessageItem.component.jsx","components/MessageItem/MessageCreate/MessageCreate.jsx","redux/messages/messages.actions.js","components/Message/Message.component.jsx","components/Containers/MessageContainer.jsx","redux/messages/messages.actionTypes.js","pages/DialogPage/index.js","pages/DialogPage/DialogPage.component.jsx","redux/auth/utils.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","redux/alert/alert.reducer.js","redux/dialogs/dialogs.reducer.js","redux/messages/messages.reducer.js","redux/auth/auth.reducer.js","redux/users/utils.user.js","redux/users/users.reducer.js","redux/theme/theme.reducer.js","redux/others/others.reducer.js","redux/root-reducer.js","redux/theme/theme.types.js","redux/store.js","components/Auth/Register/Register.component.jsx","components/Auth/Login/Login.component.jsx","pages/AuthPage/index.js","pages/AuthPage/AuthPage.component.jsx","components/CustomSelect/CustomSelect.component.jsx","components/EditProfile/EditProfile.component.jsx","pages/EditUserPage/index.js","pages/EditUserPage/EditUserPage.component.jsx","redux/theme/themes.js","redux/theme/utils.theme.js","components/CustomToggleTheme/CustomToggleTheme.component.jsx","redux/theme/theme.actions.js","components/SearchPeople/SearchPeople.component.jsx","components/SearchedUsers/SearchedUsers.component.jsx","components/Header/Header.component.jsx","components/Alert/Alert.component.jsx","components/Auth/PrivateRoute/PrivateRoute.component.jsx","App.js","serviceWorker.js","index.js"],"names":["MainBg","children","noIndentation","className","classNames","birthdayFormat","date","formatISO","Date","representation","UserInfo","user","fullName","city","birthday","AgeFromDateString","age","sex","about","Avatar","img","name","small","middle","large","src","alt","FriendItem","item","to","_id","avatar","firstName","setAlert","type","message","dispatch","uid","uuid","payload","id","setTimeout","setSearchVisible","bool","setShowModal","connect","getFriends","data","length","onClick","slice","map","key","LikesView","likes","CustomInput","forwardRef","props","ref","icon","text","label","htmlFor","CustomButton","unfollow","otherProps","createComment","postId","a","async","axios","post","comment","useState","setComment","onSubmit","e","preventDefault","placeholder","value","onChange","target","auth","deleteComment","delete","createdAt","author","formatDate","Comments","comments","transitionName","transitionEnterTimeout","transitionLeaveTimeout","likeUnlike","patch","response","error","deletePost","showComments","format","postImg","Post","posts","CustomTextArea","theme","createPost","setPostImg","imgPreview","setImgPreview","inputFile","createRef","activeSmiles","setActiveSmiles","setText","clearInput","current","trim","fD","FormData","append","onFocus","darkMode","onSelect","smile","native","set","files","URL","createObjectURL","Preloader","big","createDialog","userId","event","friends","users","friend","setAvatar","put","urlImg","history","myUser","unfollowUser","followUser","follow","image","setImage","form_data","currentUser","followers","find","isFollow","push","HomePage","loading","toggleFollow","others","showModal","getUser","get","follower","match","useEffect","params","signed","str","limit","dialogs","dialogId","currentDialogId","setDialogId","dialog","partner","sliceStr","lastMessage","setFilter","filter","Dialog","socket","io","filteredDialogs","arr","filteredName","toLowerCase","indexOf","getDialogs","on","removeListener","MessageItem","isMe","currentId","sendMessageOnServer","setMessage","messageData","emit","Message","messages","messageRef","scroll","setLimit","count","setLimitMessages","loadedMessages","res","createMessage","err","useRef","getMessage","maxScrollTop","scrollHeight","clientHeight","scrollTop","DialogPage","setAuthToken","token","defaults","headers","common","loadUser","localStorage","initial_state","reducer","state","window","location","pathname","split","dialogOpened","getItem","isAuthenticated","likeRelease","newPosts","unshift","searchVisible","combineReducers","alert","alertReducer","dialogsReducer","messagesReducer","action","setItem","removeItem","middlewares","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","registerSuccess","errors","forEach","msg","withRouter","selectedAuth","email","password","repeatPassword","secondName","formData","setFormData","onChangeFormData","store","login","AuthPage","selectedAuthType","setSelectedAuthType","CustomSelect","editUser","selectData","EditUserPage","darkTheme","lightTheme","applytheme","nextTheme","Object","keys","document","documentElement","style","setProperty","changeTheme","tm","React","getAllUsers","search","element","minLength","debounceTimeout","content","empty","logout","privateLinks","publicLinks","Component","component","rest","render","path","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ef6f903.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MainBg.styles.scss';\nimport classNames from 'classnames';\n\nconst MainBg = ({ children, noIndentation }) => {\n    return (\n        <div className={classNames(\"main-bg\", {\n            'indentation': noIndentation\n        })}>\n            {children}\n        </div>\n    );\n}\n\nexport default MainBg;","import React from 'react';\nimport './UserInfo.styles.scss';\nimport MainBg from '../MainBg/MainBg.component';\nimport { AgeFromDateString } from 'age-calculator';\nimport formatISO from 'date-fns/formatISO';\n\nconst birthdayFormat = (date) => {\n    return formatISO(new Date(date), \n    { representation: 'date'});\n};\n\nconst UserInfo = ({ user }) => {\n    return (\n        <MainBg>\n            <div className=\"user-info\">\n                <div className=\"user-info__utils\">\n                    <h1 className=\"user-info__utils-heading\">\n                        {user.fullName}\n                    </h1>\n                <span className=\"user-info__utils-status\">Offline</span>\n                </div>\n                <ul className=\"user-info__list\">\n                    { user.city ? \n                    <li\n                        className=\"user-info__item\">\n                        Город: \n                        <span>{user.city}</span>\n                    </li> : null }\n\n                    { user.birthday ?\n                    <li\n                        className=\"user-info__item\">\n                        Дата рождения:\n                        <span>\n                            { birthdayFormat(user.birthday) }\n                            {' '}\n                            ({new AgeFromDateString(birthdayFormat(user.birthday)).age} лет)\n                        </span>\n                    </li> : null }\n\n                    { user.sex ? \n                    <li \n                        className=\"user-info__item\">\n                        Пол: \n                        <span>{user.sex}</span>\n                    </li> : null }\n\n                    { user.about ? \n                    <li \n                        className=\"user-info__item\">\n                        О себе: \n                        <span>{user.about}</span>\n                    </li> : null }\n                </ul>\n            </div>\n        </MainBg>\n    );\n}\n\nexport default UserInfo;","import React from 'react';\nimport classNames from 'classnames';\nimport './Avatar.styles.scss';\n\nconst Avatar = ({ img, name, small, middle, large }) => {\n    return (\n        <div className=\"avatar\">\n            <img src={`/uploads/avatars/${img}`} alt={name} className={classNames(\"avatar__img\", {\n                'avatar__img-small': small,\n                'avatar__img-middle': middle,\n                'avatar__img-large': large\n            })}/>\n        </div>\n    );\n}\n\nexport default Avatar;","import React from 'react';\n\nimport './FriendItem.styles.scss';\nimport Avatar from '../../Avatar/Avatar.component';\nimport { Link } from 'react-router-dom';\n\nconst FriendItem = ({ item }) => {\n    return (\n        <div className=\"friend-item\">\n            <Link to={`/user/${item._id}`}\n                className=\"friend\">\n                <Avatar\n                    middle\n                    img={item.avatar}\n                />\n                <div>\n                    {item.firstName}\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default FriendItem;","import { SET_ALERT, REMOVE_ALERT } from './alertActionTypes';\nimport { uuid } from 'uuidv4';\n\nexport const setAlert = (type, message) => (dispatch) => {\n    const uid = uuid();\n    const errorData = { id: uid, type, message };\n    dispatch({\n        type: SET_ALERT,\n        payload: errorData\n    });\n\n    setTimeout(() => dispatch({\n        type: REMOVE_ALERT,\n        payload: uid\n    }), 3000);\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import { SET_SEARCH_VISIBLE, OPEN_MODAL } from './other.types';\n\nexport const setSearchVisible = (bool) => (dispatch) =>{\n    dispatch({\n        type: SET_SEARCH_VISIBLE,\n        payload: bool\n    });\n};\n\nexport const setShowModal = (type) => (dispatch) => {\n    dispatch({\n        type: OPEN_MODAL,\n        payload: type\n    });\n}","export const SET_SEARCH_VISIBLE = 'SEARCH_VISIBLE';\nexport const OPEN_MODAL = 'OPEN_MODAL';","import React from 'react';\nimport './Friends.styles.scss';\nimport MainBg from '../MainBg/MainBg.component';\nimport FriendItem from '../Friends/FriendItem/FriendItem.components';\nimport { getFriends } from '../../redux/users/users.actions';\nimport { setShowModal } from '../../redux/others/other.actions';\nimport { connect } from 'react-redux';\n\nconst Friends = ({\n    data,\n    type,\n    getFriends,\n    setShowModal\n}) => {\n\n    const getAllfriends = () => {\n        getFriends(data)\n        setShowModal('friends');\n    };\n\n    return (\n        <MainBg>\n            <div className=\"friends\">\n                <div className=\"friends__heading\">\n                    <span>{type}: {data.length}</span>\n                    {\n                        data.length > 3 ?\n                        ( <span className=\"friends__heading-all\"\n                            onClick={getAllfriends}>\n                            Все\n                        </span>) : null\n                    }\n                </div>\n                <div className=\"friends__wrap\">\n                    {\n                        data.slice(0, 3).map(item => {\n                            return (\n                                <FriendItem key={item._id} item={item} />\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        </MainBg>\n    );\n}\n\nexport default connect(null, { getFriends, setShowModal })(Friends);","import {\n    GET_USER,\n    EDIT_USER, \n    GET_ALL_USERS, \n    UNFOLLOW_USER, \n    FOLLOW_USER,\n    CREATE_POST,\n    LIKE_UNLIKE,\n    DELETE_POST,\n    CREATE_COMMENT, \n    DELETE_COMMENT,\n    VISIBLE_COMMENTS,\n    GET_FRIENDS,\n    SET_AVATAR\n} from './users.types';\n\nimport axios from 'axios';\nimport { setAlert } from '../alert/alert.actions';\n\nexport const getUser = (id) => async (dispatch) => {\n    try {\n        const user = await axios.get(`/api/users/${id}`);\n        dispatch({\n            type: GET_USER,\n            payload: user.data\n        });\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const editUser = (data, history) => async (dispatch) => {\n    try {\n        const user = await axios.post('/api/users/user/edit', data);\n        dispatch({\n            type: EDIT_USER,\n        });\n        history.push(`/user/${user.data._id}`);\n        dispatch(setAlert('success', 'Профиль успешно изменен!'));\n    } catch (err) {\n        const errors = err.response.data.errors;\n        const error = err.response.data.error;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert('error', error.msg)));\n        } else if (error) {\n            dispatch(setAlert('error', error));\n        }\n    }\n};\n\nexport const getAllUsers = (search) => async (dispatch) => {\n    if (search !== '') {\n        try {\n            const users = await axios.get(`/api/users/user/${search}`);\n            dispatch({\n                type: GET_ALL_USERS,\n                payload: users.data\n            });\n        } catch (err) {\n            if (err) {\n                dispatch({\n                    type: GET_ALL_USERS,\n                    payload: null\n                });\n            }\n        }\n    } else {\n        dispatch({\n            type: GET_ALL_USERS,\n            payload: []\n        });\n    }\n    \n};\n\nexport const unfollowUser = (id) => async (dispatch) => {\n    try {\n        const follower = await axios.delete(`/api/follow/${id}`);\n        dispatch({\n            type: UNFOLLOW_USER,\n            payload: follower.data\n        });\n        dispatch(\n            setAlert('success', `Вы успешно отписались`)\n        );\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const followUser = (id) => async (dispatch) => {\n    try {\n        const follower = await axios.post(`/api/follow/${id}`);\n        dispatch({\n            type: FOLLOW_USER,\n            payload: follower.data\n        });\n        dispatch(\n            setAlert('success', `Вы успешно подписались`)\n        );\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n}\n\nexport const createPost = (data) => async (dispatch) => {\n    try {\n        const post = await axios.post('/api/posts/post-create', data);\n        dispatch({\n            type: CREATE_POST,\n            payload: post.data\n        });\n        dispatch(\n            setAlert('success', 'Пост успешно создан!')\n        );\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const likeUnlike = (postId) => async (dispatch) => {\n    try {\n        const likes = await axios.patch(`/api/posts/${postId}/likes`);\n        dispatch({\n            type: LIKE_UNLIKE,\n            payload: { likes: likes.data, postId }\n        });\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const deletePost = (postId) => async (dispatch) => {\n    try {\n        await axios.delete(`/api/posts/${postId}`);\n        dispatch({\n            type: DELETE_POST,\n            payload: postId\n        });\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const createComment = ({ postId, text }) => async (dispatch) => {\n    const comment = await axios.post(`/api/comments/create-comment/${postId}`, \n    { text });\n    dispatch({\n        type: CREATE_COMMENT,\n        payload: { comment: comment.data, postId }\n    });\n};\n\nexport const deleteComment = ({ postId, _id }) => async (dispatch) => {\n    await axios.delete(`/api/comments/delete-comment/${_id}`)\n    dispatch({\n        type: DELETE_COMMENT,\n        payload: { postId, _id }\n    });\n};\n\n\nexport const showComments = (postId) => (dispatch) => {\n    dispatch({\n        type: VISIBLE_COMMENTS,\n        payload: postId\n    });\n}\n\nexport const getFriends = (data) => (dispatch) => {\n    dispatch({\n        type: GET_FRIENDS,\n        payload: data\n    });\n};\n\nexport const setAvatar = (data) => async (dispatch) => {\n    try {\n        const urlImg = await axios.put('/api/users/user/avatar-upload', data);\n        dispatch({ type: SET_AVATAR, payload: urlImg.data })\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};","export const GET_USER = 'GET_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\nexport const FOLLOW_USER = 'FOLLOW_USER';\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const CREATE_POST = 'CREATE_POST';\nexport const LIKE_UNLIKE = 'LIKE_UNLIKE';\nexport const DELETE_POST = 'DELETE_POST';\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const VISIBLE_COMMENTS = 'VISIBLE_COMMENTS';\nexport const GET_FRIENDS = 'GET_FRIENDS';\nexport const SET_AVATAR = 'SET_AVATAR';","import React from 'react';\n\nimport './LikesView.styles.scss';\nimport Avatar from '../Avatar/Avatar.component';\nimport { Link } from 'react-router-dom';\n\nconst LikesView = ({ likes }) => {\n    return (\n        <div className=\"likes-view\">\n            {\n                likes.length === 0 ? \n                <p className=\"empty_likes\">Пусто</p>\n                :\n                likes.map(user => {\n                    return (\n                        <Link key={user._id} to={`/user/${user._id}`}>  \n                            <Avatar small img={user.avatar} />\n                        </Link>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default LikesView;","import React, { forwardRef } from 'react';\n\nimport './CustomInput.styles.scss';\n\nconst CustomInput = forwardRef((props, ref) => {\n    return (\n        props.type === 'file'\n        ? ( <div className=\"upload-btn-wrapper\">\n                <button className=\"upload-btn\">\n                {\n                    props.icon ? <i className=\"fas fa-paperclip\"></i>\n                    : <span>{props.text}</span>\n                }\n                </button>\n                <input ref={ref} { ...props } type={props.type} />\n            </div>)\n        : ( <div className=\"custom-input__form-field\">\n                {props.label && <label\n                    htmlFor={props.id}\n                    className=\"custom-input__label\">{props.label}\n                    </label> }\n                <input\n                    {...props}\n                    type={props.type}\n                    id={props.id}\n                    className=\"custom-input__input\"\n                />\n            </div>)\n    );\n});\n\nexport default CustomInput;","import React from 'react';\n\nimport './CustomButton.styles.scss';\nimport classNames from 'classnames';\n\nconst CustomButton = ({ children, unfollow, ...otherProps }) => {\n    return (\n        <button {...otherProps} className={classNames(\"btn\", {\n            \"unfollow\": unfollow\n        })}>{children}</button>\n    );\n}\n\nexport default CustomButton;","import React, { useState } from 'react';\n\nimport './CommentCreate.styles.scss';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport CustomButton from '../../CustomButton/CustomButton.component';\nimport { createComment } from '../../../redux/users/users.actions';\nimport { connect } from 'react-redux';\n\nconst CommentCreate = ({ postId, createComment }) => {\n    const [ comment, setComment ] = useState('');\n\n    const onSubmitComment = (e) => {\n        e.preventDefault();\n        createComment({ postId, text: comment });\n        setComment('');\n    };\n\n    return (\n        <div className=\"comment-create\">\n            <form \n                className=\"comment-create_form\" \n                onSubmit={onSubmitComment}>\n                <CustomInput\n                    placeholder=\"Ваш комментарий\"\n                    type=\"text\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <CustomButton>Отправить</CustomButton>\n            </form>\n        </div>\n    );\n}\n \nexport default connect(null, { createComment })(CommentCreate);","import formatISO from 'date-fns/formatISO';\n\nexport default (date) => {\n    return formatISO(new Date(date), \n    { representation: 'date'});\n};","import React from 'react';\nimport './CommentItem.styles.scss';\nimport Avatar from '../../Avatar/Avatar.component';\nimport formatDate from '../../../utils/formatDate';\nimport { deleteComment } from '../../../redux/users/users.actions';\nimport { connect } from 'react-redux';\n\nconst CommentItem = ({\n    text,\n    _id,\n    postId,\n    createdAt,\n    deleteComment,\n    user,\n    author }) => {\n    return (\n        <div className=\"comment_item\">\n            <Avatar small img={author.avatar} />\n            <div className=\"comment_item-user\">\n            <div className=\"comment_item-data\">\n                <div className=\"comment_item-fullname\">\n                    {author.fullName}\n                </div>\n                <div className=\"comment_item-date\">{formatDate(createdAt)}</div>\n            </div>\n                <div className=\"comment_item-text\">{text}</div>\n            </div>\n            {\n                user && user._id === author._id && (\n                    <span className=\"comment_item-delete\" \n                        onClick={() => deleteComment({ postId, _id })}>\n                    Удалить</span>\n                )\n            }\n        </div>\n    );\n}\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);","import React from 'react';\nimport './Comments.styles.scss';\nimport CommentItem from './CommentItem/CommentItem.component';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\n\nconst Comments = ({ comments }) => {\n    return (\n        <>\n           {\n                comments.length > 0 ?\n                <CSSTransitionGroup\n                    transitionName=\"comments\"\n                    transitionEnterTimeout={500}\n                    transitionLeaveTimeout={300}\n                >\n                    {\n                        comments.map(\n                        comment => <CommentItem key={comment._id} { ...comment }/>\n                    )}\n                </CSSTransitionGroup>\n                \n                : <p>Комментариев нет</p>\n           }\n        </>\n    );\n}\n \nexport default Comments;","import React from 'react';\n\nimport './PostItem.styles.scss';\nimport Avatar from '../Avatar/Avatar.component';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { likeUnlike, deletePost, showComments } from '../../redux/users/users.actions';\nimport LikesView from '../LikesView/LikesView.component';\nimport CreateComment from '../Comments/CommentCreate/CommentCreate.component';\nimport Comments from '../Comments/Comments.component';\n\nconst PostItem = ({\n    user,\n    post,\n    likeUnlike,\n    deletePost,\n    showComments\n    }) => {\n        \n    return (\n        <div className=\"post_item\">\n            <div className=\"post_item-author\">\n                <Avatar small img={post.user.avatar} />\n                <div className=\"post_item-author_data\">\n                <div className=\"post_item-author_name\">\n                    {post.user.fullName}\n                </div>\n                    <div className=\"post_item-author_date\">\n                        <Moment format=\"DD-MM-YYYY HH:mm\">\n                            { post.createdAt }\n                        </Moment>\n                    </div>\n                </div>\n            </div>\n            {\n                post.postImg ?  \n                    <div className=\"post_item-img\">\n                        <img src={`/uploads/posts/${post.postImg}`} alt={post._id} />\n                    </div>\n                : null\n            }\n           {\n                post.text ? \n                    <p className=\"post_item-text\">{post.text}</p>\n                : null\n           }\n            <div className=\"post_item-utils\">\n                <div className=\"post_item-likes\">\n                    <div onClick={() => likeUnlike(post._id)} \n                        className=\"fas fa-heart\">\n                        <LikesView likes={ post.likes } />\n                    </div>\n                    <span>{post.likes.length}</span>\n                </div>\n                <div \n                    onClick={() => showComments(post._id)}\n                    className=\"post_item-comments\">\n                    <i className=\"fas fa-comments\"></i>\n                    <span>{post.comments.length}</span>\n                </div>\n                {\n                    user._id === post.user._id\n                    ?<div className=\"post_item-delete\">\n                        <i onClick={() => deletePost(post._id)}\n                            className=\"fas fa-trash-alt\">\n                        </i>\n                    </div>\n                    : null\n                }\n            </div>\n            {\n                post.showComments && post.comments.length > 0 \n                ? <Comments comments={post.comments} />\n                : null\n            }\n            <CreateComment postId={post._id} />\n        </div>\n    );\n}\nconst mapStateToProps = ({ auth: { user }}) => ({\n    user,\n});\n\nexport default connect(mapStateToProps, {\n    likeUnlike,\n    deletePost,\n    showComments\n})(PostItem);","import React from 'react';\n\nimport './Post.styles.scss';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport PostItem from '../PostItem/PostItem.component';\n\nconst Post = ({ posts }) => {\n\n    return (\n        <div className=\"post\">\n            <h3>{posts.length === 0 ? \n                `Здесь еще ничего нет 😟` : \n                'Всего постов: ' + posts.length}</h3>\n            <CSSTransitionGroup\n                transitionName=\"posts\"\n                transitionEnterTimeout={500}\n                transitionLeaveTimeout={300}\n            >\n                { posts.map(item => <PostItem key={item._id} post={item} />) }\n            </CSSTransitionGroup>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport './CustomTextArea.styles.scss';\n\nconst CustomTextArea = ({ label, ...otherProps }) => {\n    return (\n        <div className=\"customTextArea__field\">\n            {label && <label className=\"customTextArea__label\">{label}</label>}\n            <textarea \n                className=\"customTextArea__textarea\"\n                {...otherProps}\n            >\n            </textarea>\n        </div>\n    );\n}\n \nexport default CustomTextArea;","import React, { useState, createRef } from 'react';\nimport './PostCreate.styles.scss';\nimport CustomTextArea from '../CustomTextArea/CustomTextArea.component';\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport CustomInput from '../CustomInput/CustomInput.component';\nimport MainBg from '../MainBg/MainBg.component';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../redux/users/users.actions';\n\nconst PostCreate = ({ createPost, theme }) => {\n    const [postImg, setPostImg] = useState(null);\n    const [imgPreview, setImgPreview] = useState(null);\n    const inputFile = createRef();\n    const [ activeSmiles, setActiveSmiles ] = useState(false);\n    let [text, setText] = useState('');\n\n    const onChangeFile = (e) => {\n        setPostImg(e.target.files[0]);\n        setImgPreview(URL.createObjectURL(e.target.files[0]));\n    }\n\n    const onSelectSmile = (smile) => {\n        setText(text += smile.native);\n    }\n\n    const clearInput = () => {\n        inputFile.current.value = null;\n        setPostImg(null);\n        setImgPreview(null);\n    };\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        setActiveSmiles(false);\n        if (!text.trim() && !postImg) {\n            return;\n        }\n        let fD = new FormData();\n        fD.append('postImg', postImg);\n        fD.append('text', text);\n        createPost(fD);\n        setText('');\n        clearInput();\n    }\n\n    return (\n        <MainBg>\n            <div className=\"post-create\">\n                <form className=\"post-create__form\"\n                    onSubmit={onSubmitForm}>\n                    <CustomTextArea\n                        type=\"text\"\n                        name=\"text\"\n                        onChange={(e) => setText(e.target.value)}\n                        value={text}\n                        onFocus={() => setActiveSmiles(false)}\n                        placeholder=\"Напишите что-нибудь...\">\n                    </CustomTextArea>\n\n                    <div className=\"post-create__addition\">\n                        <i onClick={() => setActiveSmiles(true)} \n                            className=\"fas fa-laugh-wink\">\n                            {\n                                activeSmiles ?\n                                (<span\n                                    className=\"picker\">\n                                    <Picker\n                                        darkMode={theme === \"light\"} \n                                        onSelect={onSelectSmile} \n                                        set='apple'\n                                    />\n                                </span>)\n                                : null\n                            }\n                           \n                        </i>\n                        <CustomInput\n                            ref={inputFile}\n                            name=\"postImg\"\n                            type=\"file\"\n                            id=\"file\"\n                            icon\n                            label=\"Выбрать файл\"\n                            onChange={onChangeFile}\n                        />\n                    </div>\n                    <CustomButton>Добавить пост</CustomButton>\n                </form>\n                {\n                    imgPreview ? \n                        <div className=\"post_preview\">\n                        <img \n                            src={imgPreview}\n                            alt={postImg.name}\n                        />\n                        <span\n                            onClick={clearInput}\n                            className=\"post_preview-delete\">\n                            Удалить\n                        </span>\n                        </div> : null\n                }\n            </div>\n        </MainBg>\n    );\n}\nconst mapStateToProps = ({ theme }) => ({\n    theme: theme.theme\n});\n\nexport default connect(mapStateToProps, { createPost })(PostCreate);","import React from 'react';\n\nimport './Preloader.styles.scss'\nconst Preloader = () => {\n    return (\n        <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n        </div>\n    );\n}\n \nexport default Preloader;","import React from 'react';\n\nimport './Modal.styles.scss';\nimport { connect } from 'react-redux';\nimport { setShowModal } from '../../redux/others/other.actions';\n\nimport classNames from 'classnames';\n\nconst Modal = ({ children, small, big, middle, setShowModal }) => {\n    return (\n        <>\n            <div className={classNames(\"modal\", {\n                'small': small,\n                'big': big,\n                'middle': middle\n            })}>\n                { children }\n            </div>\n            <div \n                onClick={() => setShowModal(null)} \n                className=\"modal_overlay\">\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, { setShowModal })(Modal);","import React, { useState } from 'react';\nimport './CreateDialog.styles.scss';\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport CustomTextArea from '../CustomTextArea/CustomTextArea.component';\nimport { connect } from 'react-redux'; \nimport { createDialog } from '../../redux/dialogs/dialogs.actions';\nimport { setShowModal } from '../../redux/others/other.actions';\nimport Modal from '../../components/Modal/Modal.component';\n\nconst CreateDialog = ({ userId, createDialog, setShowModal }) => {\n    const [ text, setText ] = useState();\n\n    const onTextHandler = (e) => {\n        setText(e.target.value);\n    };\n\n    const createDialogHandler = (event) => {\n        event.preventDefault();\n        createDialog({ userId, text });\n        setShowModal(null);\n        setText('');\n    };\n\n    return (\n        <>\n            <Modal small>\n                <div className=\"create-dialog\">\n                    <form onSubmit={createDialogHandler}>\n                        <CustomTextArea \n                            onChange={onTextHandler}\n                            value={text} />\n                        <div className=\"create-dialog_controls\">\n                            <CustomButton type=\"submit\">\n                                Отправить\n                            </CustomButton>\n                            <i\n                                onClick={() => setShowModal(null)}\n                                className=\"fas fa-window-close\">\n                            </i>\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default connect(null, { createDialog, setShowModal })(CreateDialog);","import { \n    GET_DIALOGS, \n    SET_FILTER,\n    SET_CURRENT_DIALOG_ID\n     } from './dialogs.actionTypes';\n    \nimport { setAlert } from '../alert/alert.actions';\nimport axios from 'axios';\n\nexport const getDialogs = () => async (dispatch) => {\n    try {\n        const dialogs = await axios.get('/api/dialogs');\n        \n        dispatch({\n            type: GET_DIALOGS,\n            payload: dialogs.data\n        })\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n\nexport const setFilter = (filter) => dispatch => {\n    dispatch({\n        type: SET_FILTER,\n        payload: filter\n    })\n};\n\nexport const setDialogId = (id) => async (dispatch) => {\n    dispatch({\n        type: SET_CURRENT_DIALOG_ID,\n        payload: id\n    });\n};\n\n\nexport const createDialog = (data) => async (dispatch) => {\n    try {\n        await axios.post(`/api/dialogs/create/${data.userId}`, \n            { text: data.text }\n        );\n    } catch (err) {\n        dispatch(setAlert('error', err.response.data.error));\n    }\n};\n","import React from 'react';\n\nimport './FullFriends.styles.scss';\nimport Modal from '../../Modal/Modal.component';\nimport { connect } from 'react-redux';\nimport Avatar from '../../Avatar/Avatar.component';\nimport { Link } from 'react-router-dom';\n\nconst FullFriends = ({ friends }) => {\n    return (\n        <Modal big>\n            <div className=\"full-friends\">\n                {\n                   friends && friends.length > 0 ? friends.map(friend => {\n                        return (\n                            <div key={friend._id} className=\"full-friends_item\">\n                                <Link to={`/user/${friend._id}`}>\n                                    <Avatar middle img={friend.avatar} />\n                                </Link>\n                                <div className=\"name\">{friend.fullName}</div>\n                            </div>\n                        )\n                    })\n                    : <p>Ничего не найдено!</p>\n                }\n            </div>\n        </Modal>\n    );\n}\n\nconst mapStateToProps = ({ users }) => ({\n    friends: users.friends,\n});\n\nexport default connect(mapStateToProps)(FullFriends);","import React, { useState } from 'react';\n\nimport './UserView.style.scss';\n\nimport MainBg from '../../MainBg/MainBg.component';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport isFollow from '../../../utils/isFollow';\nimport CustomButton from '../../CustomButton/CustomButton.component';\nimport Avatar from '../../Avatar/Avatar.component';\nimport { setAvatar } from '../../../redux/users/users.actions';\nimport { connect } from 'react-redux';\n\nconst UserView = ({\n    user,\n    history,\n    myUser,\n    unfollowUser,\n    followUser,\n    follow,\n    setShowModal,\n    setAvatar\n}) => {\n\n    const [ image, setImage ] = useState(null);\n\n    const onChangeImage = (e) => {\n        setImage(e.target.files[0]);\n    };\n\n    const onSubmitImage = (e) => {\n        e.preventDefault();\n        const form_data = new FormData();\n        form_data.append('avatar', image, image.name);\n        setAvatar(form_data);\n        setImage(null);\n    };\n\n    return (\n        <MainBg>\n        <div className=\"home-page__user-view\">\n          <div className=\"avatar\">\n            <Avatar\n              large\n              img={user.avatar}\n              name=\"avatar\"\n            />\n            {\n                user._id === myUser._id && \n                <form className=\"avatar_form\" onSubmit={onSubmitImage}>\n                    {\n                        !image &&\n                        <div className=\"avatar_button\">\n                            <CustomInput\n                                type=\"file\"\n                                text=\"Изменить фото\"\n                                name=\"avatar\"\n                                onChange={onChangeImage}\n                            />\n                        </div>\n                    }\n                    <div className=\"avatar_form-actions\">\n                        {\n                            image &&\n                            <>\n                                <CustomButton>Обновить</CustomButton>\n                                <CustomButton \n                                    onClick={() => setImage(null)}>\n                                    Отмена\n                                </CustomButton>\n                            </>\n                        }\n                    </div>\n                </form>\n            }\n          </div>\n          <div className=\"home-page__user-actions\">\n            {  \n              (user._id !== myUser._id) ? (\n              <>\n                {\n                isFollow(user, myUser) || follow ?\n                    (<CustomButton \n                      onClick={() => unfollowUser(user._id)}\n                      unfollow>Отписаться\n                    </CustomButton>)\n                  : (<CustomButton\n                      onClick={() => followUser(user._id)}>\n                      Подписаться\n                    </CustomButton>)\n                }\n                <CustomButton onClick={() => setShowModal('dialog')}>\n                  Написать\n                </CustomButton>\n              </>\n            ) : (\n              <CustomButton\n                onClick={() => history.push('/edit-user')}\n              >Редактировать</CustomButton>\n            )}\n          </div>\n        </div>\n      </MainBg>\n    );\n}\n \nexport default connect(null, { setAvatar })(UserView);","export default (currentUser, myUser) => {\n    return currentUser.followers.find((user) => user._id === myUser._id)\n}","import HomePage from './HomePage.component';\n\nexport default HomePage;\n\n","import React, { useEffect, useState } from \"react\";\nimport \"./HomePage.styles.scss\";\n\n//components\nimport UserInfo from \"../../components/UserInfo/UserInfo.component\";\nimport Friends from \"../../components/Friends/Friends.components\";\nimport Post from \"../../components/Post/Post.component\";\nimport PostCreate from \"../../components/PostCreate/PostCreate.component\";\nimport { connect } from 'react-redux';\nimport { getUser, unfollowUser, followUser } from '../../redux/users/users.actions';\nimport Preloader from '../../components/Preloader/Preloader.component';\nimport CreateDialog from '../../components/CreateDialog/CreateDialog.component';\nimport { setShowModal } from \"../../redux/others/other.actions\";\nimport FullFriends from '../../components/Friends/FullFriends/FullFriends.component';\nimport UserView from '../../components/UserInfo/UserView/UserView.component';\n\nconst HomePage = ({ \n  match, \n  getUser,\n  user,\n  loading,\n  myUser,\n  history,\n  unfollowUser,\n  followUser,\n  follow,\n  showModal,\n  setShowModal }) => {\n\n  \n\n  useEffect(() => {\n    getUser(match.params.id);\n  }, [getUser, match.params.id]);\n\n  return (\n    <div className=\"home-page\">\n      {\n        (loading || user === null || myUser === null) ?\n        <Preloader /> :\n        <>\n          <div className=\"home-page__user\">\n          {\n              showModal === 'dialog' ? <CreateDialog userId={user._id} /> : null\n          }\n          {\n            showModal === 'friends' ? <FullFriends /> : null\n          }\n\n          <UserView\n            user={user}\n            history={history}\n            myUser={myUser}\n            unfollowUser={unfollowUser}\n            followUser={followUser}\n            follow={follow}\n            setShowModal={setShowModal}\n          />\n\n          <Friends\n            type=\"Подписчики\" \n            data={user.followers}\n          />\n          <Friends\n            type=\"Подписки\" \n            data={user.signed}\n          />\n\n        </div>\n\n        <div className=\"home-page__people\">\n          <UserInfo user={user} />\n          <div className=\"posts_schema\">\n            {(user._id === myUser._id) && <PostCreate />}\n            <Post posts={user.posts} />\n          </div>\n        </div>\n        </>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = (\n  { users: { \n    user, \n    loading, \n    toggleFollow }, auth, others }\n  ) => ({\n  user,\n  loading,\n  myUser: auth.user,\n  follow: toggleFollow,\n  showModal: others.showModal\n});\n\nexport default connect(mapStateToProps, \n  { getUser, unfollowUser, followUser, setShowModal })\n(HomePage);\n","export default (str, limit = 15) => {\n    if (str.length > limit) {\n        return str.slice(0, limit) + '...'\n    }\n    return str;\n}","import React from 'react';\n\nimport './DialogItem.styles.scss';\nimport Avatar from '../Avatar/Avatar.component';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { setDialogId } from '../../redux/dialogs/dialogs.actions';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport sliceStr from '../../utils/sliceStr';\n\nconst DialogItem = ({\n    dialog,\n    setDialogId,\n    user,\n    dialogId }) => {\n    const partner = user._id === dialog.partner._id ? \n    dialog.author : dialog.partner;\n    \n    return (\n        <Link className={classNames(\"dialog-item\", {\n            \"selected\": dialog._id === dialogId\n        })}\n            to={`/dialogs/${dialog._id}`}\n            onClick={() => setDialogId(dialog._id)}>\n            <div className=\"dialog-item_avatar\">\n                <Avatar small img={partner.avatar} />\n            </div>\n            <div className=\"dialog-item_userdata\">\n                <div className=\"dialog-item_userdata-name\">\n                    { sliceStr(partner.fullName) }\n                <span>\n                    <Moment format=\"DD/MM HH:mm\">\n                        { dialog.createdAt }\n                    </Moment>\n                </span>\n                </div>\n                <div className=\"dialog-item_userdata-text\">\n                {\n                    user._id === dialog.lastMessage.user._id ?\n                    \"Вы: \" + sliceStr(dialog.lastMessage.text)\n                    : sliceStr(dialog.lastMessage.text)\n                }\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nconst mapStateToProps = ({ auth, dialogs }) => ({\n    user: auth.user,\n    dialogId: dialogs.currentDialogId,\n});\n \nexport default connect(mapStateToProps, { setDialogId })(DialogItem);","export const START_DIALOG_ITEMS = 'START_DIALOG_ITEMS';\nexport const GET_DIALOGS = 'GET_DIALOGS';\nexport const SET_CURRENT_DIALOG_ID = 'SET_CURRENT_DIALOG_ID';\nexport const SET_FILTER = 'SET_FILTER';\nexport const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CREATE_DIALOG = 'CREATE_DIALOG';","import React from 'react';\n\nimport './DialogSearch.styles.scss';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport MainBg from '../../MainBg/MainBg.component';\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../../redux/dialogs/dialogs.actions';\n\nconst DialogSearch = ({ setFilter }) => {\n    const filteredDialogs = (e) => {\n        e.preventDefault();\n        setFilter(e.target.value);\n    };\n\n    return (\n        <MainBg>\n            <form className=\"dialog_search\">\n                    <CustomInput\n                        placeholder=\"Поиск пользователя\"\n                        onChange={filteredDialogs}\n                        type=\"search\"\n                    />\n            </form>\n        </MainBg>\n    );\n}\n\n\nexport default connect(null, { setFilter })(DialogSearch);","import React from 'react';\n\nimport './Dialog.styles.scss';\nimport DialogItem from '../DialogItem/DialogItem.component';\nimport DialogSearch from './DialogSearch/DialogSearch.component';\nimport MainBg from '../MainBg/MainBg.component';\n\nconst Dialog = ({ dialogs }) => {\n\n    return (\n        <div className=\"dialogs_wrap\">\n            <DialogSearch />\n            <MainBg noIndentation>\n                <div className=\"dialogs\">\n                    {\n                        dialogs.length === 0 ? <p className=\"empty_dialogs\">\n                            <i className=\"fas fa-inbox\"></i>\n                        Диалогов нет</p>\n                        : dialogs.map(dialog => (\n                            <DialogItem \n                                key={dialog._id}\n                                dialog={dialog}\n                            />\n                        ))\n                    }\n                </div>\n            </MainBg>\n        </div>\n    );\n}\n\n\n\nexport default Dialog;","import io from 'socket.io-client';\n\nconst socket = io('/');\n\nexport default socket;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Dialog/Dialog.component';\nimport { getDialogs } from '../../redux/dialogs/dialogs.actions';\nimport Preloader from '../Preloader/Preloader.component';\nimport socket from '../../socket/socket.io';\n\nconst DialogContainer = ({ getDialogs, dialogs, loading, user }) => {\n    useEffect(() => {\n\n        getDialogs();\n        socket.on('DIALOG_CREATED', getDialogs);\n        socket.on('CREATE_MESSAGE', getDialogs);\n        \n        return () => {\n            socket.removeListener('DIALOG_CREATED', getDialogs);\n            socket.removeListener('CREATE_MESSAGE', getDialogs);\n        };\n\n    }, [getDialogs]);\n    return (\n        <>\n            {\n                user && dialogs\n                ? <Dialog\n                    dialogs={dialogs}\n                    loading={loading}\n                />\n                : <Preloader />\n            }\n        </>\n        \n    );\n}\n\nconst filteredDialogs = (arr, filteredName, user) => {\n    if (filteredName === '') {\n        return [...arr];\n    }\n    return arr.filter(item => {\n        if (item.partner._id === user._id) {\n            return item.author.fullName.toLowerCase().indexOf(filteredName.toLowerCase()) !== -1\n        } else {\n            return item.partner.fullName.toLowerCase().indexOf(filteredName.toLowerCase()) !== -1\n        }\n    });\n};\n\nconst mapStateToProps = ({ dialogs: { dialogs, filter, loading }, auth: { user } }) => ({\n    dialogs: user && dialogs ? filteredDialogs(dialogs, filter, user) : [],\n    loading,\n    filter,\n    user\n});\n\nDialogContainer.propTypes = {\n    dialogs: PropTypes.array,\n}\n\nexport default connect(mapStateToProps, { getDialogs })(DialogContainer);","import React from 'react';\n\nimport './MessageItem.styles.scss';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nconst MessageItem = ({ text, createdAt, isMe }) => {\n    return (\n        <>\n            <div className={classNames(\"message-item\", {\n                'my': isMe\n            })}>\n                {text}\n                <span className=\"message-item_date\">\n                    <Moment format=\"DD/MM | HH:mm\">\n                        {createdAt}\n                    </Moment>\n                </span>\n            </div>\n        </>\n    );\n}\n\nexport default MessageItem;","import React, { useState } from 'react';\n\nimport './MessageCreate.styles.scss';\n\nimport MainBg from '../../MainBg/MainBg.component';\nimport CustomButton from '../../CustomButton/CustomButton.component';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport { connect } from 'react-redux';\nimport { sendMessageOnServer } from '../../../redux/messages/messages.actions';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport socket from '../../../socket/socket.io';\n\nconst MessageCreate = ({ theme, currentId, sendMessageOnServer }) => {\n    const [ message, setMessage ] = useState('');\n\n    const [ activeSmiles, setActiveSmiles ] = useState(false);\n\n    const messageData = {\n        dialogId: currentId,\n        text: message\n    }\n\n    const onChangeFormData = (e) => {\n       setMessage(e.target.value);\n    };\n\n    const onSelectSmile = (smile) => {\n        setMessage(message + smile.native);\n    };\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        if (message.trim() === '') {\n            return;\n        }\n        socket.emit('MESSAGE_CLIENT', messageData);\n        sendMessageOnServer(messageData);\n        setMessage('');\n    };\n    return (\n        <MainBg>\n            <div className=\"message-create\">\n                <form onSubmit={onSubmitForm} className=\"send-message_form\">\n                    <CustomInput\n                        type=\"text\"\n                        name=\"message\"\n                        placeholder=\"Напишите сообщение\"\n                        onChange={onChangeFormData}\n                        value={message}\n                        onFocus={() => setActiveSmiles(false)}\n                    />\n                    <i className=\"fas fa-laugh-wink\"\n                        onClick={() => setActiveSmiles(true)}>\n                            {\n                               activeSmiles ? \n                               (<span className=\"message-create_picker\">\n                                    <Picker\n                                        onSelect={onSelectSmile} \n                                        darkMode={theme === \"light\"}\n                                        set=\"apple\"\n                                    />\n                                </span>) : null\n                            }\n                    </i>\n                    <CustomButton>Отправить</CustomButton>\n                </form>\n            </div>\n        </MainBg>\n    );\n};\n\nconst mapStateToProps = ({ dialogs, theme }) => ({\n    currentId: dialogs.currentDialogId,\n    theme: theme.theme\n});\n\nexport default connect(mapStateToProps, { sendMessageOnServer })(MessageCreate);","import {\n    LOADED_MESSAGES,\n    CREATE_MESSAGE,\n    SET_LIMIT_MESSAGES\n} from './messages.actionTypes';\nimport { setAlert } from '../alert/alert.actions';\nimport axios from 'axios';\n\nexport const loadedMessages = (id, limit = 10) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/dialogs/messages/${id}?limit=${limit}`);\n        dispatch({\n            type: LOADED_MESSAGES,\n            payload: { messages: res.data.messages, count: res.data.count }\n        })\n    } catch (err) {\n        setAlert('error', err.response.data.error);\n    }\n};\n\nexport const createMessage = (message, dialogId) => async (dispatch) => {\n\n    try {\n        \n        if (message.dialogId === dialogId) {\n            dispatch({\n                type: CREATE_MESSAGE,\n                payload: message\n            })\n        }\n\n    } catch (err) {\n        setAlert('error', err.response.data.error);\n    }\n};\n\nexport const sendMessageOnServer = ({ text, dialogId }) => async () => {\n    return await axios.post(`/api/dialogs/create-message/${dialogId}`, {\n        text\n    });\n};\n\nexport const setLimitMessages = (limit) => (dispatch) => {\n    dispatch({\n        type: SET_LIMIT_MESSAGES,\n        payload: limit\n    })\n}","import React, { useEffect } from 'react';\n\nimport './Message.styles.scss';\nimport MessageItem from '../MessageItem/MessageItem.component';\nimport MessageCreate from '../MessageItem/MessageCreate/MessageCreate';\n\nconst Message = ({\n    dialogId,\n    messages,\n    messageRef,\n    scroll,\n    currentUser,\n    setLimit,\n    limit }) => {\n\n    useEffect(() => {\n        scroll();\n    }, [scroll]);\n\n    return (\n        <div className=\"message_wrap\">\n            {\n                messages && messages.count > limit ?\n                (<span onClick={setLimit} className=\"messages-loadmore\">\n                    Загрузить еще 10 сообщений\n                </span>) : null\n            }\n            <div ref={messageRef} className=\"messages\">\n                {\n                    currentUser && messages ?\n                    messages.messages.map(\n                        item => {\n                        return <MessageItem\n                            key={ item._id }\n                            isMe={currentUser._id === (item.user._id || item.user)}\n                            { ...item }\n                        /> }\n                    )\n                    : <p className=\"select_dialog\">\n                        <i className=\"fas fa-hand-point-left\"></i>\n                        <span>Выберите диалог</span>\n                    </p>\n                }\n            </div>\n            {\n                dialogId ? <MessageCreate /> : null\n            }\n        </div>\n    )\n}\n\nexport default Message;","import React, { useEffect, useRef } from 'react';\nimport Message from '../Message/Message.component';\nimport { connect } from 'react-redux';\nimport {\n    loadedMessages,\n    createMessage,\n    setLimitMessages\n} from '../../redux/messages/messages.actions';\nimport socket from '../../socket/socket.io';\n\nconst MessageContainer = ({\n    messages,\n    loadedMessages,\n    dialogId,\n    user,\n    createMessage,\n    limit,\n    setLimitMessages\n}) => {\n    const messageRef = useRef(null);\n\n    let scrollToLastMessage = () => {\n        const scrollHeight = messageRef.current.scrollHeight;\n        const clientHeight = messageRef.current.clientHeight;\n        const maxScrollTop = scrollHeight - clientHeight;\n        messageRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n    const setLimit = () => {\n        setLimitMessages(10);\n    };\n    \n    useEffect(() => {\n        const getMessage = (data) => {\n            createMessage(data, dialogId);\n        }\n\n        loadedMessages(dialogId, limit);\n\n        socket.on('CREATE_MESSAGE', getMessage);\n\n        return () => socket.removeListener('CREATE_MESSAGE', getMessage);\n\n    }, [ dialogId, limit ]);\n\n\n    return (\n        <Message\n            scroll={scrollToLastMessage}\n            messageRef={messageRef}\n            messages={messages}\n            currentUser={user}\n            dialogId={dialogId}\n            limit={limit}\n            setLimit={setLimit}\n        />\n    );\n};\n\nconst mapStateToProps = ({ messages, dialogs, auth }) => ({\n    messages: messages.messages,\n    dialogId: dialogs.currentDialogId,\n    user: auth.user,\n    limit: messages.limit,\n});\n\nexport default connect(mapStateToProps, {\n    setLimitMessages,\n    loadedMessages,\n    createMessage })\n(MessageContainer);","export const LOADED_MESSAGES = 'LOADED_MESSAGES';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const SET_LIMIT_MESSAGES = 'SET_LIMIT_MESSAGES';","import DialogPage from './DialogPage.component';\n\nexport default DialogPage;","import React from 'react';\nimport './DialogPage.styles.scss';\n\nimport DialogContainer from '../../components/Containers/DialogContainer';\nimport MessageContainer from '../../components/Containers/MessageContainer';\n\nconst DialogPage = () => {\n    return (\n        <div className=\"dialog-page\">\n            <DialogContainer />\n            <MessageContainer />\n        </div>\n    );\n}\n\nexport default DialogPage;","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from '../alert/alert.actions';\nimport { CLEAR_USER } from '../users/users.types';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from './auth.types';\nimport setAuthToken from './utils';\n\nexport const loadUser = () => async (dispatch) => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/users/user/me');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n};\n\nexport const registerSuccess = (data, history) => async (dispatch) => {\n    try {\n        const res = await axios.post('/api/auth/register', data)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n        history.push('/');\n        dispatch(setAlert('success', 'Вы успешно зарегистировались!'));\n    } catch (err) {\n        const errors = err.response.data.errors;\n        const error = err.response.data.error;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert('error', error.msg)));\n        } else if (error) {\n            dispatch(setAlert('error', error));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\nexport const login = (data, history) => async (dispatch) =>{\n    try {\n        const res = await axios.post('/api/auth/login', data);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n        dispatch(setAlert('success', 'Вы успешно авторизовались!'));\n        history.push('/');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        const error = err.response.data.error;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert('error', error.msg)));\n        } else if (error) {\n            dispatch(setAlert('error', error));\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        });\n\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    dispatch({\n        type: LOGOUT\n    });\n    dispatch({\n        type: CLEAR_USER\n    });\n};","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';","import { SET_ALERT, REMOVE_ALERT } from './alertActionTypes';\n\nconst initial_state = [];\n\nconst reducer = (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(err => err.id !== payload);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { \n    GET_DIALOGS, \n    SET_FILTER,\n    SET_CURRENT_DIALOG_ID\n} from './dialogs.actionTypes';\n\nconst initial_state = {\n    dialogs: null,\n    loading: false,\n    currentDialogId: window.location.pathname.split('dialogs/')[1],\n    filter: '',\n    dialogOpened: false\n};\n\nconst reducer = (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case GET_DIALOGS:\n            return {\n                ...state,\n                loading: false,\n                dialogs: payload,\n            }\n        case SET_FILTER:\n            return {\n                ...state,\n                filter: payload\n            }\n        case SET_CURRENT_DIALOG_ID:\n            return {\n                ...state,\n                currentDialogId: payload,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {\n    LOADED_MESSAGES,\n    CREATE_MESSAGE,\n    SET_LIMIT_MESSAGES\n} from './messages.actionTypes';\n\nconst initial_state = {\n    messages: null,\n    loading: true,\n    limit: 8,\n}\n\nconst reducer = (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case LOADED_MESSAGES:\n            return {\n                ...state,\n                loading: false,\n                messages: payload,\n            }\n        case CREATE_MESSAGE:\n            return {\n                ...state,\n                loading: false,\n                messages: { ...state.messages, messages: [ \n                    ...state.messages.messages, payload\n                ]}\n            }\n        case SET_LIMIT_MESSAGES:\n            return {\n                ...state,\n                limit: state.limit += payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from './auth.types';\n  \n  const initial_state = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n  };\n  \n  export default function(state = initial_state, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          loading: false,\n          user: payload\n        };\n      case REGISTER_SUCCESS:\n      case LOGIN_SUCCESS:\n        localStorage.setItem('token', payload);\n        return {\n          ...state,\n          token: payload,\n          isAuthenticated: true,\n          loading: false\n        };\n      case REGISTER_FAIL:\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          isAuthenticated: false,\n          loading: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }","export const likeRelease = (user, payload) => {\n    return { ...user,\n        posts: user.posts.map(post => {\n            return post._id === payload.postId\n            ? {...post, likes: [ ...payload.likes ]}\n            : post\n        })\n    }\n};\n\nexport const createPost = (user, payload) => {\n    const newPosts = [...user.posts];\n    newPosts.unshift(payload);\n\n    return { ...user,\n        posts: newPosts\n    }\n};\n\nexport const deletePost = (user, payload) => {\n    return {\n        ...user,\n        posts: user.posts.filter(post => (\n            post._id !== payload\n        ))\n    }\n};\n\nexport const createComment = (user, { postId, comment }) => {\n    return {\n        ...user,\n        posts: user.posts.map(post => {\n           return post._id === postId ?\n            { ...post, comments: [ ...post.comments, comment ] }\n            : post\n        })\n    }\n};\n\nexport const deleteComment = (user, { postId, _id }) => {\n    return {\n        ...user,\n        posts: user.posts.map(post => {\n           return post._id === postId ?\n            { ...post, comments: post.comments.filter(comment => (\n                comment._id !== _id)\n            )}\n            : post\n        })\n    }\n};\n\nexport const showComments = (user, payload) => {\n    return { ...user,\n        posts: user.posts.map(post => {\n            return post._id === payload\n            ? { ...post, showComments: !post.showComments }\n            : post\n        })\n    }\n};\n\n","import {\n    GET_USER,\n    EDIT_USER,\n    GET_ALL_USERS,\n    UNFOLLOW_USER,\n    FOLLOW_USER,\n    CLEAR_USER,\n    CREATE_POST,\n    LIKE_UNLIKE,\n    DELETE_POST,\n    CREATE_COMMENT,\n    DELETE_COMMENT,\n    VISIBLE_COMMENTS,\n    GET_FRIENDS,\n    SET_AVATAR,\n} from './users.types';\n\nimport {\n    likeRelease,\n    createPost,\n    deletePost,\n    createComment,\n    deleteComment,\n    showComments,\n} from './utils.user';\n\nconst initial_state = {\n    user: null,\n    loading: true,\n    users: [],\n    toggleFollow: false,\n    friends: null\n};\n\nexport default (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case GET_USER:\n            return {\n                ...state,\n                user: payload,\n                loading: false,\n                toggleFollow: false\n            }\n        case EDIT_USER:\n            return {\n                ...state,\n            }\n        case GET_ALL_USERS:\n            return {\n                ...state,\n                users: payload,\n                loading: false\n            }\n        case UNFOLLOW_USER:\n            return {\n                ...state,\n                loading: false,\n                toggleFollow: false,\n                user: { ...state.user, followers: payload }\n            }\n        case FOLLOW_USER:\n            return {\n                ...state,\n                loading: false,\n                user: { ...state.user, followers: payload },\n                toggleFollow: true\n            }\n        case CLEAR_USER:\n            return {\n                user: null,\n                loading: true,\n                users: null,\n                toggleFollow: false\n            }\n        case CREATE_POST:\n            return {\n                ...state,\n                loading: false,\n                user: createPost(state.user, payload)\n            }\n        case LIKE_UNLIKE:\n            return {\n                ...state,\n                loading: false,\n                user: likeRelease(state.user, payload)\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                loading: false,\n                user: deletePost(state.user, payload)\n            }\n        case CREATE_COMMENT:\n            return {\n                ...state,\n                user: createComment(state.user, payload)\n            }\n        case DELETE_COMMENT:\n            return {\n                ...state,\n                user: deleteComment(state.user, payload)\n            }\n        case VISIBLE_COMMENTS:\n            return {\n                ...state,\n                user: showComments(state.user, payload)\n            }\n        case GET_FRIENDS:\n            return {\n                ...state,\n                friends: [ ...payload ]\n            }\n        case SET_AVATAR:\n            return {\n                ...state,\n                user: { ...state.user, avatar: payload }\n            }\n        default:\n            return state;\n    }\n}\n\n\n\n","import { CHANGE_THEME } from './theme.types';\n\nconst initial_state = {\n    theme: localStorage.getItem(\"theme\") || \"dark\"\n};\n\nexport default (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case CHANGE_THEME:\n            return {\n                ...state,\n                theme: payload\n            }\n        default:\n            return state\n    }\n}\n","import { SET_SEARCH_VISIBLE, OPEN_MODAL } from './other.types';\n\nconst initial_state = {\n    searchVisible: false,\n    showModal: null\n};\n\nexport default (state = initial_state, { type, payload }) => {\n    switch(type) {\n        case SET_SEARCH_VISIBLE:\n            return {\n                ...state,\n                searchVisible: payload\n            }\n        case OPEN_MODAL:\n           return  {\n                ...state,\n                showModal: payload\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\n\nimport alertReducer from './alert/alert.reducer';\nimport dialogsReducer from './dialogs/dialogs.reducer';\nimport messagesReducer from './messages/messages.reducer';\nimport authReducer from './auth/auth.reducer';\nimport usersReducer from './users/users.reducer';\nimport themeReducer from './theme/theme.reducer';\nimport othersReducer from './others/others.reducer';\n\nexport default combineReducers({\n    alert: alertReducer,\n    dialogs: dialogsReducer,\n    messages: messagesReducer,\n    auth: authReducer,\n    users: usersReducer,\n    theme: themeReducer,\n    others: othersReducer,\n});","export const CHANGE_THEME = 'CHANGE_THEME';","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [thunk];\nconst initialState = {};\n\nexport default createStore(rootReducer, initialState, composeWithDevTools(\n    applyMiddleware(...middlewares)\n));","import React, { useState } from 'react';\nimport './Register.styles.scss';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport CustomButton from '../../CustomButton/CustomButton.component';\nimport { registerSuccess } from '../../../redux/auth/auth.actions';\nimport { setAlert } from '../../../redux/alert/alert.actions';\nimport { connect } from 'react-redux';\nimport store from '../../../redux/store';\nimport { withRouter } from 'react-router-dom';\n\nconst Register = ({ selectedAuth, registerSuccess, history }) => {\n    const [ formData, setFormData ] = useState({\n        email: '',\n        password: '',\n        repeatPassword: '',\n        firstName: '',\n        secondName: ''\n    });\n\n    const onChangeFormData = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const { email,\n            password,\n            repeatPassword,\n            firstName,\n            secondName } = formData;\n\n    const register = (e) => {\n        e.preventDefault();\n        const { repeatPassword, ...data } = formData;\n        if (password !== repeatPassword) {\n            store.dispatch(setAlert('error', 'Пароли не совпадают'));  \n            return;\n        }\n        registerSuccess(data, history);\n    }\n\n    return (\n        <form onSubmit={register} className=\"register\">\n            <CustomInput\n                name='email'\n                type=\"email\"\n                placeholder=\"Ваш email\"\n                onChange={onChangeFormData}\n                value={email}\n            />\n            <CustomInput\n                name='firstName'\n                type=\"text\"\n                placeholder=\"Ваше имя\"\n                onChange={onChangeFormData}\n                value={firstName}\n            />\n            <CustomInput\n                name='secondName'\n                type=\"text\"\n                placeholder=\"Ваша фамилия\"\n                onChange={onChangeFormData}\n                value={secondName}\n            />\n            <CustomInput\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Ваш пароль\"\n                onChange={onChangeFormData}\n                value={password}\n            />\n            <CustomInput\n                name=\"repeatPassword\"\n                type=\"password\"\n                placeholder=\"Повторите пароль\"\n                onChange={onChangeFormData}\n                value={repeatPassword}\n            />\n            <div className=\"account_question\">\n                Есть аккаунт? \n                <span onClick={() => selectedAuth('login')}>Войти</span>\n            </div>\n            <CustomButton>Регистрация</CustomButton>\n        </form>\n    );\n};\n\nexport default connect(null, { registerSuccess })(withRouter(Register));","import React, { useState } from 'react';\nimport './Login.styles.scss';\nimport CustomInput from '../../CustomInput/CustomInput.component';\nimport CustomButton from '../../CustomButton/CustomButton.component';\nimport { login } from '../../../redux/auth/auth.actions';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Login = ({ selectedAuth, history, login }) => {\n    const [ formData, setFormData ] = useState({\n        email: '',\n        password: ''\n    });\n\n    const onChangeFormData = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const { email, password } = formData;\n\n    const logIn = (e) => {\n        e.preventDefault();\n        login(formData, history);\n    };\n\n    return (\n        <form onSubmit={logIn} className=\"login\">\n            <CustomInput\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Ваш email\"\n                onChange={onChangeFormData}\n                value={email}\n            />\n            <CustomInput\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Ваш пароль\"\n                onChange={onChangeFormData}\n                value={password}\n            />\n            <div className=\"account_question\">Нет аккаунта? \n                <span onClick={() => selectedAuth('register')}>Регистрация</span>\n            </div>\n            <CustomButton>Войти</CustomButton>\n        </form>\n    );\n}\n\n\nexport default connect(null, { login })(withRouter(Login));","import AuthPage from './AuthPage.component';\n\nexport default AuthPage;","import React, { useState } from 'react';\nimport './AuthPage.styles.scss';\n\nimport Register from '../../components/Auth/Register/Register.component';\nimport Login from '../../components/Auth/Login/Login.component';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AuthPage = ({ user }) => {\n    const [ selectedAuthType, setSelectedAuthType ] = useState('login');\n    const selectedAuth = (type) => setSelectedAuthType(type);\n\n    return (\n        <>\n            {\n                user && user !== null\n                ?\n                    <Redirect to={`/user/${user._id}`} />\n                :   (<div className=\"auth-page\">\n                        {\n                            selectedAuthType === 'login' \n                            ? (<Login selectedAuth={selectedAuth} />)\n                            : (<Register selectedAuth={selectedAuth} />)\n                        }\n                    </div>)\n            }\n        </>\n\n    );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n    user: auth.user\n});\n\nexport default connect(mapStateToProps)(AuthPage);","import React from 'react';\n\nimport './CustomSelect.styles.scss';\n\nconst CustomSelect = ({ label, data, ...otherProps}) => {\n    return (\n        <div className=\"custom-select_field\">\n            <label className=\"custom-select_label\">{label}</label>\n            <select {...otherProps}  className=\"custom-select_select\">\n                {\n                    data.map(({ value, name }) => <option key={value} value={value}>{name}</option>)\n                }\n            </select>\n        </div>\n    );\n};\n\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\n\nimport './EditProfile.styles.scss';\nimport CustomInput from '../CustomInput/CustomInput.component';\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport CustomTextArea from '../CustomTextArea/CustomTextArea.component';\nimport CustomSelect from '../CustomSelect/CustomSelect.component';\nimport Preloader from '../Preloader/Preloader.component';\nimport { editUser } from '../../redux/users/users.actions';\nimport { withRouter } from 'react-router-dom';\n\nconst EditProfile = ({ editUser, user, history }) => {\n    const [ selectData ] = useState([\n        { value: 'Мужской', name: 'Мужской'},\n        { value: 'Женский', name: 'Женский'}\n    ]);\n\n    const [ formData, setFormData ] = useState({\n        firstName: '',\n        secondName: '',\n        city: '',\n        sex: '',\n        birthday: '',\n        about: ''\n    });\n\n  \n    useEffect(() => {\n        setFormData({\n            firstName: user && user !== null ? user.firstName : '',\n            secondName: user && user !== null ? user.secondName : '',\n            city: user && user !== null ? user.city : '',\n            sex: user && user !== null && user.sex ? user.sex : 'Мужской',\n            birthday: user && user.birthday ? formatDate(user.birthday) : '',\n            about: user && user !== null ? user.about : ''\n        });\n    }, [ user ]);\n    const onChangeFormData = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        editUser(formData, history);\n    };\n\n    const { firstName,\n            secondName,\n            city,\n            sex,\n            birthday,\n            about } = formData;\n\n    return (\n        <div className=\"edit-profile\">\n             {\n                (!user && user === null) ? <Preloader/>\n                :\n                <>\n                    <form onSubmit={onSubmitForm} className=\"editForm\">\n                        <CustomInput\n                            name=\"firstName\"\n                            placeholder=\"Введите имя\"\n                            label=\"Ваше имя:\"\n                            onChange={onChangeFormData}\n                            value={firstName || ''}\n                        />\n\n                        <CustomInput\n                            name=\"secondName\"\n                            placeholder=\"Введите фамилию\"\n                            label=\"Ваша фамилия:\"\n                            onChange={onChangeFormData}\n                            value={secondName || ''}\n                            \n                        />\n\n                        <CustomInput\n                            name=\"city\"\n                            placeholder=\"Введите город\"\n                            label=\"Ваш город:\"\n                            onChange={onChangeFormData}\n                            value={city || ''}\n                        />\n\n                        <CustomSelect\n                            name=\"sex\"\n                            label=\"Пол:\"\n                            data={selectData}\n                            onChange={onChangeFormData}\n                            value={sex || 'Мужской'}\n                        />\n\n                        <CustomInput\n                            name=\"birthday\"\n                            type=\"date\"\n                            label=\"Дата рождения:\"\n                            onChange={onChangeFormData}\n                            value={birthday}\n                        />\n\n                        <CustomTextArea \n                            name=\"about\"\n                            placeholder=\"Напишите о себе\"\n                            label=\"О себе:\"\n                            onChange={onChangeFormData}\n                            value={about || ''}\n                        >\n                        </CustomTextArea>\n\n                        <CustomButton>Обновить</CustomButton>\n                    </form>\n                </>\n            }\n        </div>\n    );\n}\n\nEditProfile.propTypes = {\n    setAlert: PropTypes.func,\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    user: auth.user,\n});\n\nexport default connect(mapStateToProps, { editUser })\n(withRouter(EditProfile));","import EditUserPage from './EditUserPage.component';\nexport default EditUserPage;","import React from 'react';\nimport './EditUserPage.styles.scss';\nimport EditProfile from '../../components/EditProfile/EditProfile.component';\n\nconst EditUserPage = () => {\n    return (\n        <div className=\"edit-user-page\">\n            <div className=\"edit-user-page__heading\">\n                Редактировать профиль\n            </div>\n            <EditProfile />\n        </div>\n    );\n}\n \nexport default EditUserPage;","export const darkTheme = {\n    '--primary-one': 'rgb(52,117,165)',\n    '--primary-two': 'rgb(35,56,68)',\n    '--color-active': 'rgb(222, 250, 67)',\n    '--color-main': 'rgb(41,57,62)',\n    '--color-bg': 'rgb(30, 35, 47)',\n    '--color-btn-unfollow': 'rgb(0, 191, 255)',\n    '--color-shadow': 'rgb(0, 0, 0)',\n    '--color-line': 'rgb(41,57,62)',\n    '--color-main-text': 'rgb(255,255,255)',\n    '--color-icon': 'rgb(204, 204, 204)',\n    '--color-support-text': 'rgb(255, 255, 255)',\n    '--color-date': 'rgb(128, 128, 128)',\n    '--color-icon-special': 'rgb(255, 192, 203)',\n    '--color-danger': 'rgb(216, 88, 88)',\n    '--color-my-message': 'rgb(52,112,165)',\n    '--color-success': 'rgb(52,112,165)',\n    '--color-swapi': 'rgb(9, 11, 24)',\n    '--color-alert-success': 'rgb(52,112,165)'\n};\n\nexport const lightTheme = {\n    '--primary-one': 'rgba(86,67,250,1)',\n    '--primary-two': 'rgba(85,197,122,1)',\n    '--color-active': 'rgb(222, 250, 67)',\n    '--color-main': 'rgb(255, 255, 255)',\n    '--color-bg': 'rgb(239,243,245)',\n    '--color-btn-unfollow': 'rgb(0, 191, 255)',\n    '--color-shadow': 'rgb(0, 0, 0)',\n    '--color-line': 'rgb(239,243,245)',\n    '--color-main-text': 'rgb(0,0,0)',\n    '--color-support-text': 'rgb(255, 255, 255)',\n    '--color-icon': 'rgb(204, 204, 204)',\n    '--color-date': 'rgb(128, 128, 128)',\n    '--color-icon-special': 'rgb(255, 192, 203)',\n    '--color-danger': 'rgb(216, 88, 88)',\n    '--color-my-message': 'rgb(239,254,222)',\n    '--color-success': 'rgb(52,112,165)',\n    '--color-swapi': 'rgb(9, 11, 24)',\n    '--color-alert-success': 'rgba(85,197,122,1)'\n};","import { darkTheme, lightTheme } from './themes';\n\nexport const applytheme = (nextTheme) => {\n    const theme = nextTheme === \"light\" ? lightTheme : darkTheme;\n    Object.keys(theme).map(key => {\n        const value = theme[key];\n        return document.documentElement.style.setProperty(key, value);\n    });\n};","import React from 'react';\nimport './CustomToggleTheme.styles.scss';\nimport { connect } from 'react-redux';\nimport { changeTheme } from '../../redux/theme/theme.actions';\nimport { applytheme } from '../../redux/theme/utils.theme';\n\nconst CustomToggleTheme = ({ theme, changeTheme, ...otherProps }) => {\n    const tm = theme === \"dark\" ? \"light\" : \"dark\";\n\n    React.useEffect(() => {\n        applytheme(tm);\n    }, [tm])\n\n    return (\n        <div onClick={() => changeTheme(tm)}\n            className=\"custom-toggle-theme\" {...otherProps}>\n            {\n                theme === 'dark'\n                ? <i className=\"fas fa-sun\"></i>\n                : <i className=\"fas fa-moon\"></i>\n            }\n        </div>\n    )\n}\nconst mapStateToProps = ({ theme }) => ({\n    theme: theme.theme\n});\n\nexport default connect(mapStateToProps, \n    { changeTheme }\n)(CustomToggleTheme);","import { CHANGE_THEME } from './theme.types';\nimport { applytheme } from './utils.theme';\n\nexport const changeTheme = (theme) => (dispatch) => {\n    applytheme(theme);\n    localStorage.setItem(\"theme\", theme);\n    dispatch({\n        type: CHANGE_THEME,\n        payload: theme\n    })\n};","import React from 'react';\nimport './SearchPeople.styles.scss';\nimport CustomInput from '../CustomInput/CustomInput.component';\nimport { DebounceInput } from 'react-debounce-input';\nimport { getAllUsers } from '../../redux/users/users.actions';\nimport { connect } from 'react-redux';\nimport { setSearchVisible } from '../../redux/others/other.actions';\n\nconst SearchPeople = ({ getAllUsers, setSearchVisible }) => {\n\n    return (\n        <div className=\"search-users\">\n            <DebounceInput\n                element={CustomInput}\n                minLength={1}\n                debounceTimeout={1200}\n                onChange={(e) => getAllUsers(e.target.value.trim())}\n                onFocus={() => setSearchVisible(true)}\n                placeholder=\"Поиск пользователя...\"\n                type=\"search\"\n            >\n            </DebounceInput>\n        </div>\n    );\n}\n\nexport default connect(null, { getAllUsers, setSearchVisible })\n(SearchPeople);","import React from 'react';\nimport './SearchedUsers.styles.scss';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../Avatar/Avatar.component';\nimport { setSearchVisible } from '../../redux/others/other.actions';\n\nconst SearchedUsers = ({ users, setSearchVisible }) => {\n\n    const content = users && users !== null && users.length > 0 \n        && users.map((user) => {\n        return (\n            <ul key={user._id} className=\"searched-users_list\">\n                <Link \n                    className=\"searched-users_item\"\n                    to={`/user/${user._id}`}>\n                    <Avatar small img={user.avatar} />\n                    {user.fullName}\n                </Link>\n            </ul>\n        )\n    });\n\n    const empty = users && users !== null\n        && users.length === 0 && (\n            <p className=\"empty_users\">\n                <i className=\"fas fa-inbox\"></i>\n                Введите имя пользователя\n            </p>\n        );\n\n\n    const error = users == null && (\n        <p className=\"empty_users\">\n            <i className=\"fas fa-inbox\"></i>\n            Не найдено\n        </p>\n    );\n\n    \n\n    return (\n        <div className=\"searched-users\">\n             <div className=\"searched-users_options\">\n                <h3 className=\"searched-users_heading\">Люди:</h3>\n                <p className=\"searched-users_close\" \n                    onClick={() => setSearchVisible(false)}>Закрыть</p>\n             </div>\n            { content || (empty || error) }\n        </div>\n    );\n}\nconst mapStateToProps = ({ users: { users, loading } }) => ({\n    users,\n    loading\n});\n\nexport default connect(mapStateToProps, { setSearchVisible })(SearchedUsers);","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Header.styles.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth/auth.actions';\nimport CustomToggleTheme from '../CustomToggleTheme/CustomToggleTheme.component';\nimport SearchPeople from '../SearchPeople/SearchPeople.component';\nimport Avatar from '../Avatar/Avatar.component';\nimport SearchedUsers from '../SearchedUsers/SearchedUsers.component';\n\nconst Header = ({ \n    isAuthenticated,\n    loading, \n    user, \n    logout,\n    searchVisible\n    }) => {\n    const privateLinks = (\n        <>  \n            <li className=\"header__list-item\">\n                <Avatar small img={ user && user.avatar } />\n            </li>\n            <li className=\"header__list-item\">\n                <SearchPeople />\n                {\n                    searchVisible ? <SearchedUsers /> : null\n                }\n            </li>\n            <li className=\"header__list-item\">\n                <Link className=\"header__list-link\" \n                    to={`/user/${user !== null && user._id}`}>\n                    <i className=\"fas fa-user\"></i>\n                    Моя страница\n                </Link>\n            </li>\n            <li className=\"header__list-item\">\n                <Link className=\"header__list-link\" to=\"/dialogs\">\n                    <i className=\"fas fa-comments\"></i>\n                    Диалоги\n                </Link>\n            </li>\n            <li className=\"header__list-item\">\n                <Link to=\"/\" className=\"header__list-link\" \n                    onClick={() => logout()}\n                >\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                    Выйти\n                </Link>\n            </li>\n        </>\n    );\n\n    const publicLinks = (\n        <Link className=\"header__list-link\" to=\"/\">\n            <i className=\"fas fa-sign-in-alt\"></i>\n            Вход\n        </Link>\n    );\n    return (\n        <div className=\"header\">\n            <div className=\"header__logo\">\n                <Link className=\"header__logo-link\" to={user && user !== null ? \n                    `/user/${user._id}` : '/'}\n                >\n                    <i className=\"fas fa-spinner\"></i>\n                </Link>\n            </div>\n            <CustomToggleTheme />\n\n            <ul className=\"header__list\">\n                {\n                    isAuthenticated && !loading && user !== null\n                    ? privateLinks : publicLinks\n                }\n            </ul>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ auth, others }) => ({\n    isAuthenticated: auth.isAuthenticated,\n    loading: auth.loading,\n    user: auth.user,\n    searchVisible: others.searchVisible\n});\nexport default connect(mapStateToProps, { logout })(withRouter(Header));","import React from 'react';\n\nimport './Alert.styles.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nconst Alert = ({ messages }) => {\n    return (\n        <>\n            {\n                messages && messages.length\n                ?\n                    messages.map((msg) => {\n                        return ( <div key={msg.id} className={classNames(\"alert\", {\n                                'many': messages.length > 1,\n                                'success': msg.type === 'success',\n                                'error': msg.type === 'error'\n                            })}>{msg.message}</div>)\n                    })\n                : null\n            } \n        </>\n    )\n};\n\nAlert.propTypes = {\n    messages: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n    messages: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated, loading,\n    ...rest\n  }) => (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !loading ? (\n          <Redirect to='/' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />)\n\nconst mapStateToProps = ({ auth }) => ({\n    isAuthenticated: auth.isAuthenticated,\n    loading: auth.loading,\n    user: auth.user,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\n\n//pages\nimport HomePage from './pages/HomePage';\nimport DialogPage from './pages/DialogPage';\nimport AuthPage from './pages/AuthPage';\nimport EditUserPage from './pages/EditUserPage';\n\n//components\nimport Header from './components/Header/Header.component';\nimport Alert from './components/Alert/Alert.component';\nimport PrivateRoute from './components/Auth/PrivateRoute/PrivateRoute.component';\nimport { connect } from 'react-redux';\n\nconst App = ({ user }) => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Alert/>\n      <Switch>\n       <Route path=\"/\" exact component={AuthPage}/>\n       <PrivateRoute exact path=\"/user/:id\" component={HomePage} />\n       <PrivateRoute path=\"/dialogs\" component={DialogPage} />\n       <PrivateRoute exact path=\"/edit-user\" component={EditUserPage} />\n       <Route render={() => <h1>404</h1>} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { loadUser } from './redux/auth/auth.actions';\nimport setAuthToken from './redux/auth/utils';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nstore.dispatch(loadUser());\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}